# -*- coding: utf-8 -*-
"""LowerTriangle.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1SqJ2HtbcUB8oAlv2xHVZtVx3qtJDoG8X

**Question**

Create a function to create a triangle shape with the * character based on the entered number parameters

* Input: integer
* Output: string

*Example*
 ```
 input : 3
 output :
 *****
 ***
 *
 ```
"""

# ANSWER
class TriangleMaker:
  def __init__(self, size=3):
    self.size = size
    self.shape = ""

  def generate(self):
    if self.__exception():
      numbers = self.__arrange_numbers()
      self.__print(numbers)
    return self.shape

  def __print(self, numbers):
    for number in numbers:
      for _ in range(number):
        self.shape = self.shape + "*"
      self.shape = self.shape + "\n"

  def __arrange_numbers(self):
    result = [1]
    for i in range(1, self.size):
      result.append(result[i-1]+2)
    result.reverse()
    return result

  def __exception(self):
    if self.size > 1:
      return True
    else:
      self.shape = "Invalid input, I suggest you enter a larger number."
      return False

# UNIT TEST
class TriangleMakerTests():
  def __init__(self):
    self.__input_positive_numbers()
    self. __input_negative_numbers()

  def __input_positive_numbers(self):
    maker = TriangleMaker(5) # given
    triangle = maker.generate() # when
    assert triangle == "*********\n*******\n*****\n***\n*\n" # then

  def __input_negative_numbers(self):
    maker = TriangleMaker(5) # given
    triangle = maker.generate() # when
    assert triangle == "Invalid input, I suggest you enter a larger number." # then